scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
}

type Post {
    id: ID!
    title: String!
    content: String!
    author: User! @belongsTo
    comments: [Comment!]! @hasMany
}

type Comment {
    id: ID!
    comment: String!
    post: Post! @belongsTo
}

type UserPaginator {
    paginatorInfo: PaginatorInfo!
    data: [User!]!
}

type PaginatorInfo {
    count: Int!
    currentPage: Int!
    firstItem: Int
    hasMorePages: Boolean!
    lastItem: Int
    lastPage: Int!
    perPage: Int!
    total: Int!
}

#type Query{
#    users : [User!]! @all
#    userGetById(id: ID! ): User @field(resolver: "App\\GraphQL\\Queries\\UserGetById")
#    userGetByEmail(email: String!) : User @field(resolver: "App\\GraphQL\\Queries\\UserGetByEmail")
#}

type Query {
    user(id: ID! @eq) : User @find
    users: [User!]! @paginate
    #    posts: [Post!]! @all
    post(id: Int! @eq): Post @find
}

type Mutation {
    PostCreate(title: String!, content: String!, user_id: Int!) : Post
        @field(resolver: "App\\GraphQL\\Mutations\\PostCreate")
}
#@validator(class: "App\\GraphQL\\Validators\\ValidatePostCreate")

#"Account of a person who utilizes this application."

