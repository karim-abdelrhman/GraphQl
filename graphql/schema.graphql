scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
}

type Post {
    id: ID!
    title: String!
    content: String!
    user: User! @belongsTo
    comments: [Comment!]! @hasMany
}

type Comment {
    id: ID!
    comment: String!
    post: Post! @belongsTo
}

#input createPostInput {
#    title: String!
#    content: String!
#    user_id: Int!
#}

type Query {
    user(id: ID! @eq) : User @find

    me : User @auth

    users(first: Int!, page: Int) : [User!]! @paginate(type: "PAGINATOR", model : "User")

    posts(first: Int!page: Int): [Post!]! @paginate(type: "PAGINATOR" ,model: "Post")


}

type Mutation {
    createUser(
        name: String! @rules(apply: ["string"])
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @hash @rules(apply: ["min:6"])
    ) : String!
    @field(resolver: "createUser")



    createPost(title: String!, content: String!, user_id: Int!) : Post
    @validator(class: "StorePostValidator")
    @field(resolver: "createPost")

    #    createPostUsingInput(input: createPostInput!) : Post! @create(model: "App\\Models\\Post")
    #        @field(resolver: "App\\GraphQL\\Mutations\\PostCreate")
}
#

#"Account of a person who utilizes this application."

